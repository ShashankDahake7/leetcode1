class Solution {
public:
    bool solve(int i, int j, string s, string p, vector<vector<int>>& dp) {
        if (i < 0 && j < 0) {
            return true;
        }
        if (j < 0) {
            return false;
        }
        if (i < 0) {
            while (j >= 0) {
                if (p[j] != '*') {
                    return false;
                }
                j -= 2;
            }
            return true;
        }        
        if (dp[i][j] != -1) {
            return dp[i][j];
        }
        bool ans = false;    
        if (p[j] == '*') {
            if (p[j - 1] == s[i] || p[j - 1] == '.') {
                ans = solve(i - 1, j, s, p, dp) || solve(i, j - 2, s, p, dp);
            }
            else {
                ans = solve(i, j - 2, s, p, dp);
            }
        }
        else if (p[j] == '.' || p[j] == s[i]) {
            ans = solve(i - 1, j - 1, s, p, dp);
        }
        return dp[i][j] = ans;
    }
    bool isMatch(string s, string p) {
        int m = s.size();
        int n = p.size();
        vector<vector<int>> dp(m, vector<int>(n, -1));
        return solve(m - 1, n - 1, s, p, dp);
    }
};
