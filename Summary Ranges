// Method-1
class Solution {
public:
    vector<string> summaryRanges(vector<int>& arr) {
        int n = arr.size(); 
        vector<string> ans;
        string temp = "";
        for(int i = 0; i < n; i++) {
            int j = i;
            while(j + 1 < n && arr[j + 1] == arr[j] + 1){
                j++;
            }
            if(j > i){
                temp += to_string(arr[i]);
                temp += "->";
                temp += to_string(arr[j]);
            }
            else {
                temp += to_string(arr[i]);
            }
            ans.push_back(temp); 
            temp = ""; 
            i = j; 
        }
        return ans;
    }
};

// Method-2
class Solution {
public:
    vector<string> summaryRanges(vector<int>& nums) {
        int n = nums.size(); 
        vector<string> ans;
        if(n == 0){
            return ans;
        }
        int a = nums[0];
        for(int i = 0; i < n; i++) {
            if((i == n - 1) || ((nums[i] + 1) != nums[i + 1])){
                if(nums[i] != a){
                    ans.push_back(to_string(a) + "->" + to_string(nums[i]));
                }
                else{
                    ans.push_back(to_string(a));
                }
                if(i != n - 1){
                    a = nums[i + 1];
                }
            }
        }
        return ans;
    }
};
