// Method-1
class Solution {
public:
    vector<vector<int>> matrixReshape(vector<vector<int>>& mat, int r, int c) {
        if((mat[0].size() * mat.size()) != (r * c)){
            return mat;
        }
        vector <vector<int>> res(r, vector <int> (c));
        int k = 0, l = 0;
        for(int i = 0; i < mat.size(); i++) {
            for(int j = 0; j < mat[0].size(); j++) {                
                if(l >= c) {
                    k++;
                    l = 0;
                }
                res[k][l++] = mat[i][j];
            }
        } 
        return res;
    }
};

// Method-2
class Solution {
public:
    vector<vector<int>> matrixReshape(vector<vector<int>>& mat, int r, int c) {
        vector<vector<int>> reshape(r , vector<int>(c , 0));
        int row = mat.size();
        int col = mat[0].size();
        if((r * c) != (row * col)){
            return mat;
        }
        for(int i = 0 ; i < (r*c) ; i++){
           reshape[i / c][i % c] = mat[i / col][i % col];
       }
       return reshape;
    }
};
