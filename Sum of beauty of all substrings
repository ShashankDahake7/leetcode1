// Method-1
class Solution {
public:
    int beautySum(string s) {
        int n=s.size();
        int ans=0;
        for(int i=0 ; i<n ; i++){	
            unordered_map<char , int> mp;
            for(int j=i ; j<n ; j++){
                mp[s[j]]++;
                int mini=INT_MAX;
                int maxi=INT_MIN;
                for(auto it: mp){
                    maxi=max(maxi , it.second);
                    mini=min(mini , it.second);
                }
                ans+=(maxi-mini);
            }	
        }
        return ans;
    }
};

// Method-2
class Solution {
public:
    int diffFreq(vector<int> v){
        int minf = 501;
        int maxf = -1;
        for(int i=0; i<v.size(); i++){
            if(v[i]!=0){
                minf = min(v[i], minf);
                maxf = max(v[i], maxf);
            }   
        }
        return maxf-minf;
    }
    int beautySum(string s) {
        int ans=0;
        for(int l=0; l<s.size(); l++){
            vector<int> alph(26,0);
            for(int r=l; r<s.size(); r++){
                alph[s[r]-'a']++;
                ans += diffFreq(alph);
            }
        }
        return ans;
    }
};
