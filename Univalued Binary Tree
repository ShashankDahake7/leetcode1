/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    bool isUnivalTree(TreeNode* root) {
        if (root == NULL) {
            return true;
        }
        if (root->left == NULL && root->right == NULL) {
            return true;
        }
        bool left = isUnivalTree(root->left);
        bool right = isUnivalTree(root->right);
        bool curr;
        if (root->left && root->right) {
            curr = (root->left->val == root->right->val) && (root->val == root->left->val);
        }
        else if (root->left) {
            curr = root->left->val == root->val;
        }
        else {
            curr = root->right->val == root->val;
        }
        if (left && right && curr) {
            return true;
        }
        return false;
    }
};
