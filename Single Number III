class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        long long xorry = 0;
        for (int i = 0; i < nums.size(); i++) {
            xorry ^= nums[i];
        }
        // creating mask using this trick given below
        long long mask = xorry & (-xorry);
        int y = 0;
        int x = 0;
        for (auto num : nums) {
            if ((mask & num) == 0) {
                x = x ^ num;
            } else {
                y = y ^ num;
            }
        }
        return {x, y};
    }
};
