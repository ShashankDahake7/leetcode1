class Solution {
public:
    vector<int> hours = {1, 2, 4, 8}, minutes = {1, 2, 4, 8, 16, 32};
    void solve(vector<string>& res, pair<int, int> time, int turnedOn, int start) {
        if (turnedOn == 0) {
            res.push_back(to_string(time.first) + (time.second < 10 ? ":0" : ":")+ to_string(time.second));
            return;
        }
        for (int i = start; i < hours.size() + minutes.size(); i++) {
            if (i < hours.size()) {
                time.first += hours[i];
                if (time.first < 12) {
                    solve(res, time, turnedOn - 1, i + 1);
                }
                time.first -= hours[i];
            } 
            else {
                time.second += minutes[i - hours.size()];
                if(time.second < 60){
                    solve(res, time, turnedOn - 1, i + 1); 
                }
                time.second -= minutes[i - hours.size()];
            }
        }
    }
    vector<string> readBinaryWatch(int turnedOn) {
        vector<string> res;
        solve(res, make_pair(0, 0), turnedOn, 0);
        return res;
    }
};
