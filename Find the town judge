// Method-1
class Solution {
public:
    int findJudge(int n, vector<vector<int>>& trust) {
        vector<int> indegree(n + 1);
        vector<int> outdegree(n + 1);
        for(vector<int>& t : trust){
            outdegree[t[0]]++;
            indegree[t[1]]++;
        }
        for(int i = 1; i <= n; i++){
            if((indegree[i] == (n - 1)) && (outdegree[i] == 0)){
                return i;
            }
        }
        return -1;
    }
};

// Method-2
class Solution {
public:
    int findJudge(int n, vector<vector<int>>& trust) {
        vector<int> count(n + 1);
        for(vector<int>& t : trust){
            count[t[0]]--;
            count[t[1]]++;
        }
        for(int i = 1; i <= n; i++){
            if(count[i] == (n - 1)){
                return i;
            }
        }
        return -1;
    }
};
