class Solution {
public:
    bool same(vector<vector<int>>& mat, vector<vector<int>>& target) {
        if (mat.size() == target.size() && mat[0].size() == target[0].size()) {
            for (int i = 0; i < mat.size(); i++) {
                for (int j = 0; j < mat[0].size(); j++) {
                    if (mat[i][j] != target[i][j])
                        return false;
                }
            }
        }
        return true;
    }
    vector<vector<int>> rotate(vector<vector<int>>& mat) {
        int n = mat.size();
        int m = mat[0].size();
        vector<vector<int>> b(m, vector<int>(n, 0));
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                b[j][n - i - 1] = mat[i][j];
            }
        }
        return b;
    }
    bool findRotation(vector<vector<int>>& mat, vector<vector<int>>& target) {
        for (int i = 0; i < 4; i++) {
            if (same(mat, target)) {
                return true;
            }
            mat = rotate(mat);
        }
        return false;
    }
};
