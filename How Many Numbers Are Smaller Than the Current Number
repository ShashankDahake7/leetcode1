// Method-1
class Solution {
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
        vector<int>ans;
        for(int i=0;i<nums.size();i++){
            int count=0;
            for(int j=0;j<nums.size();j++){
                if(nums[i]>nums[j]) {
                    count++;
                }
            }
            ans.push_back(count);
        }
       return ans; 
    }
};

// Method-2
class Solution {
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
        vector<int> buckets(101, 0);
        for (int num : nums) {
            buckets[num]++;
        }
        for (int i = 1; i < buckets.size(); i++) {
            buckets[i] += buckets[i - 1];
        }
        vector<int> res(nums.size());
        for (int i = 0; i < nums.size(); i++) {
            if (nums[i] == 0) {
                res[i] = 0;
            } 
            else {
                res[i] = buckets[nums[i] - 1];
            }
        }
        return res;
    }
};
