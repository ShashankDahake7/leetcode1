// Method-1
class Solution {
public:
    int maxDistance(vector<int>& nums) {
        int ans =0;
        for(int i = 0;i<nums.size();i++){
            for(int j = i+1;j<nums.size();j++){
                if(nums[i]!=nums[j]){
                    ans = max(ans,(j-i));
                }
            }
        }
        return ans;
    }
};

// Method-2
class Solution {
public:
    int maxDistance(vector<int>& colors) {
        int i = 0, j = colors.size() - 1;
        int ans1 = 0, ans2 = 0;
        while(i < j){
            if(colors[i] != colors[j]){
                ans1 = max(ans1, abs(j - i));
            }
            j--;
        }
        i = 0, j = colors.size() - 1;
        while(i < j){
            if(colors[i] != colors[j]){
                ans2 = max(ans2, abs(j - i));
            }
            i++;
        }
        return max(ans1, ans2);
    }
};
