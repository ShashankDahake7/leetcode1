class Solution {
public:
    int firstOccurence(vector<int>& nums, int target){
        int n=nums.size();
        int left=0,right=n-1,ans=-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]<target){
                left=mid+1;
            }
            else if(nums[mid]==target){
                ans=mid;
                right=mid-1;
            }
            else{
                right=mid-1;
            }
        }
        return ans;
    }
    int lastOccurence(vector<int>& nums, int target){
        int n=nums.size();
        int left=0,right=n-1,ans=-1;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[mid]<target){
                left=mid+1;
            }
            else if(nums[mid]==target){
                ans=mid;
                left=mid+1;
            }
            else{
                right=mid-1;
            }
        }
        return ans;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        return {firstOccurence(nums,target),lastOccurence(nums,target)};
    }
};
