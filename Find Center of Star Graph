// Method-1
class Solution {
public:
    int findCenter(vector<vector<int>>& edges) {
        int n = edges.size();
        unordered_map<int, int> m;
        for (int i = 0; i < n; i++) {
            m[edges[i][0]]++;
            m[edges[i][1]]++;
        }
        for (auto i : m) {
            if (i.second == n) {
                return i.first;
            }
        }
        return -1;
    }
};

// Method-2
class Solution {
public:
    int findCenter(vector<vector<int>>& edges) {
        int a = edges[0][0], b = edges[0][1];
        int c = edges[1][0], d = edges[1][1];
        if (a == c || a == d) {
            return a;
        }
        if (b == c || b == d) {
            return b;
        }
        return -1;
    }
};
