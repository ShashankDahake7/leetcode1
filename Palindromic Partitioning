class Solution {
public:
    bool isPalindrom(int start , int end , string &s){
        while(start<end){
            if(s[start]!=s[end]){
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
    void f(int ind, int n, vector<string> &temp, vector<vector<string>> &ans, string &s){
        if(ind == n){
            ans.push_back(temp);
            return;
        }
        for(int i = ind ; i < n ; i++){
            if(isPalindrom(ind,i,s)){
                temp.push_back(s.substr(ind , i-ind +1));
                f(i+1,n , temp , ans , s);
                temp.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        int n = s.length();
        vector<string> temp;
        f(0 ,n , temp , ans , s );
        return ans; 
    }
};
