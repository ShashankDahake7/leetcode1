// Method-1
class Solution {
public:
    int alternateDigitSum(int n) {
        int sum = 0;
        string s = to_string(n);
        for (int i = 0; i < s.length(); i = i + 2) {
            char ch = s[i];
            sum += int(ch) - 48;
        }
        for (int i = 1; i < s.length(); i = i + 2) {
            char ch = s[i];
            sum += (int(ch) - 48) * (-1);
        }
        return sum;
    }
};

// Method-2
class Solution {
public:
    int alternateDigitSum(int n) {
        int sum1 = 0, sum2 = 0, x = 0, y;
        x = n, y = 0;
        while (x) {
            y++;
            x /= 10;
        }
        while (y--) {
            if (y & 1) {
                sum2 += (n % 10);
            } else {
                sum1 += (n % 10);
            }
            n /= 10;
        }
        return (sum1 - sum2);
    }
};
