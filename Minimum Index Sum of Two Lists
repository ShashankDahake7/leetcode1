// Method-1
class Solution {
public:
    vector<string> findRestaurant(vector<string>& list1, vector<string>& list2) {
        vector<string> result;
        int min_sum = INT_MAX;
        for (int i = 0; i < list1.size(); ++i) {
            for (int j = 0; j < list2.size(); ++j) {
                if (list1[i] == list2[j]) {
                    int current_sum = i + j;
                    if (current_sum < min_sum) {
                        min_sum = current_sum;
                        result = {list1[i]};
                    } else if (current_sum == min_sum) {
                        result.push_back(list1[i]);
                    }
                }
            }
        }

        return result;
    }
};

// Method-2
class Solution {
public:
    vector<string> findRestaurant(vector<string>& list1, vector<string>& list2) {
        vector<string> result;
        unordered_map <string,int> mp;
        int min_sum=INT_MAX;
        for(int i=0;i<list1.size();i++){
            mp[list1[i]]++;
        }
        for(int j=0;j<list2.size();j++){
            if(mp.find(list2[j]) !=mp.end()){
                int curr=j+mp[list2[j]];
                if(curr<min_sum){
                    min_sum=curr;
                    result={list2[j]};
                }
                else if(curr==min_sum){
                    result.push_back(list2[j]);
                }
            }
        }
        return result;
    }
};
