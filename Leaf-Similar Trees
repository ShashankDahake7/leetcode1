class Solution {
public:
    void leafNode1(TreeNode* root1, vector<int>& a) {
        if (root1 == NULL) {
            return;
        }
        if (root1->left == NULL && root1->right == NULL) {
            a.push_back(root1->val);
        }
        leafNode1(root1->left, a);
        leafNode1(root1->right, a);
    }
    void leafNode2(TreeNode* root2, vector<int>& b) {
        if (root2 == nullptr) {
            return;
        }
        if (root2->left == NULL && root2->right == NULL) {
            b.push_back(root2->val);
        }
        leafNode2(root2->left, b);
        leafNode2(root2->right, b);
    }
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> a, b;
        leafNode1(root1, a);
        leafNode2(root2, b);
        if(a == b){
            return true;
        }
        else{
            return false;
        }
    }
};
