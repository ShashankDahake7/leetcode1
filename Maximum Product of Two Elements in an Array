// Method-1
class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int n = nums.size();
        sort(nums.begin(), nums.end());
        int max1 = (nums[n - 1] - 1) * (nums[n - 2] - 1);
        int max2 = (nums[0] - 1) * (nums[1] * - 1);
        return max(max1, max2);
    }
};

// Method-2
class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int biggest = 0;      
        int secondBiggest = 0;
        for (int num : nums) {
            if (num > biggest) {
                secondBiggest = biggest;
                biggest = num;
            } 
            else {
                secondBiggest = max(secondBiggest, num);
            }
        }
        return (biggest - 1) * (secondBiggest - 1);
    }
};
