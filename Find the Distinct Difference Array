// Method-1
class Solution {
public:
    vector<int> distinctDifferenceArray(vector<int>& nums) {
        vector<int> ans;
        unordered_map<int, int> mp;
        int count = 0;
        for(auto i : nums){
            mp[i]++;
        }
        for(auto it : mp){
            if(it.second > 0){
                count++;
            }
        }
        unordered_set<int> st;
        for(auto i : nums){
            st.insert(i);
            mp[i]--;
            if(mp[i] == 0){
                count--;
            }
            ans.push_back(st.size() - count);
        }
        return ans;
    }
};

// Method-2
class Solution {
public:
    vector<int> distinctDifferenceArray(vector<int>& nums) {
        map<int, int> m1, m2;
        vector<int> ans;
        for(int i = 0; i < nums.size(); i++){ 
            m1[nums[i]]++;
        }
        for(int i = 0; i < nums.size(); i++){
            m2[nums[i]]++;
            m1[nums[i]]--;
            if(m1[nums[i]] == 0){
                m1.erase(nums[i]);
            }
            ans.push_back(m2.size() - m1.size());
        }
        return ans;
    }
};
