// Method-1
class Solution {
public:
    int numberOfSubstrings(string s) {
        int n = s.size();
        vector<int> mp(3, 0);
        int ans = 0;
        int i = 0;
        for(int j = 0; j < n; j++){
            mp[s[i] - 'a']++;
            while(mp[0] > 0 && mp[1] > 0 && mp[2] > 0){
                ans += n - i;
                mp[s[i] - 'a']--;
            }
        }
        return ans;
    }
};

// Method-2
class Solution {
public:
    int numberOfSubstrings(string s) {
        int cnt = 0, n = s.length();
        int a = -1, b = -1, c = -1;
        for (int i = 0; i < n; i++) {
            if (s[i] == 'a')
                a = i;
            else if (s[i] == 'b')
                b = i;
            else
                c = i;
            cnt += (min(a, min(b, c)) + 1);
        }
        return cnt;
    }
};
