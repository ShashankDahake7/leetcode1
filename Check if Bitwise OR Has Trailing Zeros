// Method-1
class Solution {
public:
    bool hasTrailingZeros(vector<int>& nums) {
        int n = nums.size();
        for(int i = 0; i < n - 1; i++){
            for(int j = i + 1; j < n; j++){
                int x = nums[i] | nums[j];
                if(x % 2 == 0){
                    return true;
                }
            }
        }
        return false;
    }
};

// Method-2
class Solution {
public:
    bool hasTrailingZeros(vector<int>& nums) {
        int count_even = 0;
        for (auto num: nums) {
            if (num % 2) {
                continue;
            }
            count_even++;
        }
        return (count_even > 1);
    }
};
