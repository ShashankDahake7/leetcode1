/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root, int& minVal, long long& secondMin) {
        if (root == NULL) {
            return;
        }
        if (root->val < minVal) {
            secondMin = minVal;
            minVal = root->val;
        } 
        else if (root->val > minVal && root->val < secondMin) {
            secondMin = root->val;
        }
        helper(root->left, minVal, secondMin);
        helper(root->right, minVal, secondMin);
    }
    int findSecondMinimumValue(TreeNode* root) {
        if (root == NULL) {
            return -1;
        }
        int minVal = root->val;
        long long secondMin = LLONG_MAX;
        helper(root, minVal, secondMin);
        if (secondMin == LLONG_MAX) {
            return -1;
        }
        return secondMin;
    }
};
