#include <string>
using namespace std;

class Solution {
public:
    bool isValid(string& nums, int start, string& num1, string& num2) {
        if ((num1.length() > 1 && num1[0] == '0') || (num2.length() > 1 && num2[0] == '0')) {
            return false;
        }
        string sumStr = addStrings(num1, num2);
        if (start + sumStr.length() > nums.length() || nums.substr(start, sumStr.length()) != sumStr) {
            return false;
        }
        if (start + sumStr.length() == nums.length()) {
            return true;
        }
        return isValid(nums, start + sumStr.length(), num2, sumStr);
    }
    string addStrings(string& num1, string& num2) {
        int i = num1.length() - 1, j = num2.length() - 1, carry = 0;
        string result = "";
        while (i >= 0 || j >= 0 || carry > 0) {
            int digit1 = (i >= 0) ? num1[i--] - '0' : 0;
            int digit2 = (j >= 0) ? num2[j--] - '0' : 0;
            int sum = digit1 + digit2 + carry;
            result = to_string(sum % 10) + result;
            carry = sum / 10;
        }
        return result;
    }
    bool isAdditiveNumber(string nums) {
        int n = nums.length();
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                string num1 = nums.substr(0, i + 1);
                string num2 = nums.substr(i + 1, j - i);
                if (isValid(nums, j + 1, num1, num2)) {
                    return true;
                }
            }
        }
        return false;
    }
};
