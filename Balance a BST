class Solution {
public:
    void inorder(TreeNode* root, vector<int> &inorderVal){
        if(root == NULL){
            return;
        }
        inorder(root->left, inorderVal);
        inorderVal.push_back(root->val);
        inorder(root->right, inorderVal);
    }
    TreeNode* inorderToBST(int s, int e, vector<int> inorderVal){
        if(s > e){
            return NULL;
        }
        int mid = (s+e)/2;
        TreeNode* root = new TreeNode(inorderVal[mid]);
        root->left = inorderToBST(s, mid-1, inorderVal);
        root->right = inorderToBST(mid+1, e, inorderVal);
        return root;
    }
    TreeNode* balanceBST(TreeNode* root) {
        vector<int> inorderVal;
        inorder(root, inorderVal);
        return inorderToBST(0, inorderVal.size()-1, inorderVal);
    }
};
