/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* insertionSortList(ListNode* head) {
        ListNode* ptr1 = head;
        ListNode* prev1 = NULL;
        while (ptr1 != NULL) {
            ListNode* ptr2 = head;
            ListNode* prev2 = NULL;
            while (ptr2 != ptr1 && ptr2->val < ptr1->val) {
                prev2 = ptr2;
                ptr2 = ptr2->next;
            }
            if (ptr1 == ptr2) {
                prev1 = ptr1;
                ptr1 = ptr1->next;
            } else {
                prev1->next = ptr1->next;
                ListNode* temp = ptr1;
                ptr1 = ptr1->next;
                temp->next = ptr2;
                if (ptr2 == head) {
                    head = temp;
                } else {
                    prev2->next = temp;
                }
            }
        }
        return head;
    }
};
