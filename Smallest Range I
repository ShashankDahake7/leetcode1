// Method-1
class Solution {
public:
    int smallestRangeI(vector<int>& nums, int k) {
        int n, m, ans = 0;
        if(nums.size() <= 1){
            return ans;
        }
        else{
            sort(nums.begin(), nums.end());
            n = nums[0] + k;
            m = nums[nums.size() - 1] - k;
            if(n <= m){
                ans = m - n;
            }
            else{
                ans = 0;
            }
        }
        return ans;
    }
};

// Method-2
class Solution {
public:
    int smallestRangeI(vector<int>& nums, int k) {
        int min = INT_MAX, max = INT_MIN;
        for(int i = 0; i < nums.size(); i++){
            if(nums[i] < min){
                min = nums[i];
            }
            if(nums[i] > max){
                max = nums[i];
            }
        }
        int ans = max - k - min - k;
        return ans > 0 ? ans : 0;
    }
};
