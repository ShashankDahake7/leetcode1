/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        if(root == NULL){
            return true;
        }
        queue<TreeNode*> q;
        q.push(root);
        bool flag = true;
        while(!q.empty()){
            int n = q.size();
            int prev = flag ? INT_MIN : INT_MAX;
            while(n--) {
                TreeNode* curr = q.front();
                q.pop();
                if(flag && ((curr->val % 2) == 0 || curr->val <= prev)){
                    return false;
                }
                if(!flag && ((curr->val % 2) != 0 || curr->val >= prev)){
                    return false;
                }
                if(curr->left){
                    q.push(curr->left);
                }
                if(curr->right){
                    q.push(curr->right);
                }
                prev = curr->val;
            }  
            flag = !flag;
        }
        return true;
    }
};