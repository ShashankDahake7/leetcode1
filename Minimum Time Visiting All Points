// Method-1 (Chebyshev Distance)
class Solution {
public:
    int maxNorm(vector<int>& P, vector<int>& Q){
        return max(abs(P[0] - Q[0]), abs(P[1] - Q[1]));
    }
    int minTimeToVisitAllPoints(vector<vector<int>>& points) {
        int ans = 0;
        vector<int> prev = points[0];
        for (auto& P: points){
            ans += maxNorm(P, prev);
            prev = P;
        }
        return ans;
    }
};

// Method-2
class Solution {
public:
    int minTimeToVisitAllPoints(vector<vector<int>>& points) {
        int totalTime = 0;
        for (int i = 0; i < points.size() - 1; i++) {
            int x1 = points[i][0], y1 = points[i][1];
            int x2 = points[i + 1][0], y2 = points[i + 1][1]; 
            int dy = abs(y2 - y1);
            int dx = abs(x2 - x1);
            totalTime += min(dx, dy) + abs(dy - dx);
        }
        return totalTime;
    }
};
