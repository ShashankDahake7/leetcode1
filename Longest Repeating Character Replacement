// Method-1
class Solution {
public:
    int characterReplacement(string s, int k) {
        int n = s.size();
        int maxi = 0;
        for (int i = 0; i < n; i++) {
            int len = 1;
            int count = 0;
            for (int j = i + 1; j < n; j++) {
                if (s[i] == s[j]) {
                } 
                else {
                    count++;
                }
                if (count > k) {
                    break;
                }
                len++;
                maxi = max(maxi, len);
            }
            if (count <= k) {
                maxi = max(maxi, len + min(k - count, i));
            }
        }
        return maxi;
    }
};

// Method-2
class Solution {
public:
    int characterReplacement(string s, int k) {
        vector<int> mp(26, 0);
        int i = 0, j = 0, maxCount = 0;
        int result = 0;
        while (i < s.length()) {
            mp[s[i] - 'A']++;
            maxCount = max(maxCount, mp[s[i] - 'A']);
            if (i - j + 1 - maxCount > k) {
                mp[s[j] - 'A']--;
                j++;
            }
            result = max(result, i - j + 1);
            i++;
        }
        return result;
    }
};
