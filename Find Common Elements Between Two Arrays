// Method-1
class Solution {
public:
    vector<int> findIntersectionValues(vector<int>& nums1, vector<int>& nums2) {
        int n = nums1.size(), m = nums2.size();
        vector<int> ans(2);
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(nums1[i] == nums2[j]){
                    ans[0]++;
                    break;
                }
            }
        }
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(nums1[j] == nums2[i]){
                    ans[1]++;
                    break;
                }
            }
        }
        return ans;
    }
};

// Method-2
class Solution {
public:
    vector<int> findIntersectionValues(vector<int>& nums1, vector<int>& nums2) {
        map<int, int> freq1, freq2;
        int n1 = 0, n2 = 0;
        for (int num : nums1){
            freq1[num]++;
        }
        for(int num : nums2){
            freq2[num]++;
        }
        for(auto i : nums1){
            if(freq2[i] > 0){
                n1++;
            }
        }
        for(auto i : nums2){
            if(freq1[i] > 0){
                n2++;
            }
        }
        return {n1,n2};
    }
};
