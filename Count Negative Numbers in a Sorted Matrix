// Method-1
class Solution {
public:
    int countNegatives(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        int count = 0;
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(grid[i][j] < 0){
                    count++;
                }
            }
        }
        return count;
    }
};

// Method-2
class Solution {
public:
    int countNegatives(vector<vector<int>>& grid) {
        int res = 0;
        for(int i = 0 ; i < grid.size() ; i++){
            int left = 0, right = grid[i].size();
            while(left < right){
                int mid = (left + right) / 2;
                if(grid[i][mid] >= 0){
                    left = mid + 1;
                }
                else{
                    right = mid;
                }
            }
            res += grid[i].size() - left;
        }
        return res;
    }
};
