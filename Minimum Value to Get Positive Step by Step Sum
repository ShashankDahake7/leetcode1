// Method-1
class Solution {
public:
    int minStartValue(vector<int>& nums) {
        int ans = -1;
        for(int start = 1; start <= 10001; start++){
            int sum = start;
            bool flag = 1;
            for(int j = 0; j < nums.size(); j++){
                sum += nums[j];
                if(sum < 1){
                    flag = 0;
                    break;
                }
            }
            if(flag == 1){
                ans = start;
                break;
            }
        }
        return ans;
    }
};

// Method-2
class Solution {
public:
    int minStartValue(vector<int>& nums) {
        int sum = 0;
        int prefSum = 0;
        for(int i = 0; i < nums.size(); i++){
            sum += nums[i];
            if(sum < prefSum){
                prefSum = sum;
            }
        }
        return -prefSum + 1;
    }
};

// Method-3
class Solution {
public:
    int minStartValue(vector<int>& nums) {
        int minSum = 1, sum = 0;
        for(int i = 0; i < nums.size(); i++){
            sum += nums[i];
            minSum = min(minSum, sum);
        }
        if(minSum > 0){
            return 1;
        }
        return (-1 * minSum) + 1;
    }
};
