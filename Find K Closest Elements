// Method-1
class Solution {
public:
    vector<int> findClosestElements(vector<int>& arr, int k, int x) {
        priority_queue<pair<int, int>,vector<pair<int, int>>, greater<pair<int, int>>> pq;
        for(int i = 0; i < arr.size(); i++){
            pq.push({abs(arr[i] - x), arr[i]});
        }
        vector<int> ans;
        for(int i = 0; i < k; i++){
            ans.push_back(pq.top().second);
            pq.pop();
        }
        sort(ans.begin(), ans.end());
        return ans;
    }
};

// Method-2
class Solution {
public:
    vector<int> solve(vector<int>& arr, int k, int x){
        int i = 0, j = arr.size() - 1;
        while(j - i >= k){
            if((x - arr[i]) > arr[j] - x){
                i++;
            }
            else{
                j--;
            }
        }
        return vector<int>(arr.begin() + i, arr.begin() + j + 1);
    }
    vector<int> findClosestElements(vector<int>& arr, int k, int x) {
        return solve(arr, k, x);
    }
};
