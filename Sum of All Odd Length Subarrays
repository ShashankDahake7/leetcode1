// Method-1
class Solution {
public:
    int sumOddLengthSubarrays(vector<int>& arr) {
        int n = arr.size();
        int sum = 0;
        for(int i = 0; i < n; i++){
            for(int j = i; j < n; j++){
                for(int k = i; k <= j; k++){
                    if(((j - i + 1) % 2) != 0){
                        sum += arr[k];
                    }
                }
            }
        }
        return sum;
    }
};

// Method-2
class Solution {
public:
    int sumOddLengthSubarrays(vector<int>& arr) {
        int n = arr.size();
        int ans = 0;
        for(int i = 0; i < n; i++){
            int end = i + 1;
            int start = n - i;
            int total = start * end;
            int odd = total / 2;
            if((total % 2) == 1){
                odd++;
            }
            ans += odd * arr[i];
        }
        return ans;
    }
};
